"use strict";var g=Object.create;var T=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var C=(a,e)=>{for(var s in e)T(a,s,{get:e[s],enumerable:!0})},f=(a,e,s,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of x(e))!D.call(a,o)&&o!==s&&T(a,o,{get:()=>e[o],enumerable:!(t=w(e,o))||t.enumerable});return a};var d=(a,e,s)=>(s=a!=null?g(E(a)):{},f(e||!a||!a.__esModule?T(s,"default",{value:a,enumerable:!0}):s,a)),b=a=>f(T({},"__esModule",{value:!0}),a);var P={};C(P,{activate:()=>y,deactivate:()=>F});module.exports=b(P);var c=d(require("vscode"));var n=d(require("vscode")),u=class{constructor(e){this._onDidChangeTreeData=new n.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.refresh=e=>{if(e){this._onDidChangeTreeData.fire(e);return}this._onDidChangeTreeData.fire()};this.getChildren=async()=>{let e=await n.tasks.fetchTasks().then(function(t){return t}),s=[];if(e.length!=0)for(let t=0;t<e.length;t++){let o=new h(e[t].definition.type,e[t].name,n.TreeItemCollapsibleState.None),v={command:"TaskRunner.executeTask",title:"Execute",arguments:[e[t],o,this.refresh]};o.command=v,o.tooltip="click to run task ..",s[t]=o}return s};this.watchTaskFile=e=>{let s=e.document.fileName.split("\\"),t=s.length,o=s[t-2],v=s[t-1];o===".vscode"&&v==="tasks.json"&&this.refresh()};e.subscriptions.push(n.workspace.onDidChangeTextDocument(this.watchTaskFile))}getTreeItem(e){return e}},h=class extends n.TreeItem{constructor(e,s,t,o){super(s,t),this.type=e,this.command=o,this.iconPath=new n.ThemeIcon("debug-start")}};var k=d(require("vscode")),m=d(require("path")),r=d(require("fs")),l=class{constructor(){this.DEFAULT_TASK={type:"shell",command:"_",label:"_",presentation:{reveal:"never",close:!0}};this.getTasksJsonPath=()=>{let e=k.workspace.workspaceFolders;if(e&&e.length>0){let s=e[0].uri.fsPath;return m.join(s,".vscode","tasks.json")}};this.ensureVscodeDirectoryExists=e=>{r.existsSync(e)||r.mkdirSync(e)};this.createTasksJsonFile=(e,s)=>{r.writeFileSync(e,JSON.stringify({version:"2.0.0",tasks:[s]},null,4),"utf-8"),k.window.showInformationMessage("Created tasks.json with default task.")};this.updateTasksJsonFile=(e,s)=>{let t=r.readFileSync(e,"utf-8"),o=JSON.parse(t);o.tasks||(o.tasks=[]),o.tasks.push(s),r.writeFileSync(e,JSON.stringify(o,null,4),"utf-8"),k.window.showInformationMessage("Added new task to tasks.json.")};this.createNewTask=()=>{let e=this.getTasksJsonPath();if(!e){k.window.showErrorMessage("No workspace folder found.");return}let s=m.dirname(e);this.ensureVscodeDirectoryExists(s),r.existsSync(e)?this.updateTasksJsonFile(e,this.DEFAULT_TASK):this.createTasksJsonFile(e,this.DEFAULT_TASK)}}};var i=d(require("vscode")),p=class{constructor(){this.disposables=[];this.executeTaskHandler=(e,s,t)=>{i.tasks.executeTask(e).then(o=>{s.taskExecution=o},o=>i.window.showErrorMessage(o)),this.disposables.push(i.tasks.onDidStartTaskProcess(o=>{o.execution.task===e&&(s.iconPath=new i.ThemeIcon("debug-stop"),s.description="running ..",s.tooltip="click to stop task ..",s.command={command:"TaskRunner.terminateTask",title:"Terminate Task",arguments:[s.taskExecution]},t(s))})),this.disposables.push(i.tasks.onDidEndTaskProcess(o=>{o.execution.task===e&&(s.iconPath=new i.ThemeIcon("debug-start"),s.description=void 0,s.tooltip="click to run task ..",s.command={command:"TaskRunner.executeTask",title:"Execute",arguments:[e,s,t]},t(s))}))};this.terminateTask=e=>{e.terminate()};this.dispose=()=>{this.disposables.forEach(e=>e.dispose())}}};function y(a){let e=new u(a),s=new l,t=new p;a.subscriptions.push(c.window.registerTreeDataProvider("TaskRunner",e),c.commands.registerCommand("TaskRunner.refresh",()=>e.refresh()),c.commands.registerCommand("TaskRunner.executeTask",t.executeTaskHandler),c.commands.registerCommand("TaskRunner.terminateTask",t.terminateTask),c.commands.registerCommand("TaskRunner.createNewTask",s.createNewTask))}function F(){}0&&(module.exports={activate,deactivate});
